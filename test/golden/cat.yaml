in_source: |
  var buffer
  var data_ready
  : cat
      begin
          data_ready @
          0 != if
              buffer @
              0 != if
                  buffer @
                  out 1
              else
                  exit
              then
              0 data_ready !
          then
      again
  ;
  : interrupt_handler
      in 0
      buffer !
      data_ready 1 !
  ;
  0 data_ready !
  0 buffer !
  eint
  cat
  halt
in_stdin: |
  30 0 H
  90 0 I
  160 0 !
  240 0 \0
out_instructions: !!binary |
  AAAAKgQAAAAEAAABCAAAAAQAAAAEAAAACAAAAGgAAAAEAAAKSAAAAHAAAAAEAAABDAAAAAQAAAAgAAAABAAAJVgAAABMAAAABAAAAAwAAAAEAAAAIAAAAAQAAB1YAAAATAAAAAQAAAAMAAAAFAAAAQQAACFEAAAABAAAJywAAAAsAAAARAAAAHQAAAAEAAAABAAAAQgAAAB0AAAAdAAAAAQAAApEAAAAVAAAABAAAAAEAAAACAAAAAQAAAEEAAABCAAAAGQAAAA=
out_data: !!binary |
  AAAAAAAAAAA=
out_stdout: |
  source LoC: 27 code instr: 49
  ============================================================
  output_buffer:HI!
  ticks: 277

out_instructions_hex: |
  0 - 04000000 - lit 0
  1 - 04000001 - lit 1
  2 - 08000000 - store
  3 - 04000000 - lit 0
  4 - 04000000 - lit 0
  5 - 08000000 - store
  6 - 68000000 - eint
  7 - 0400000A - lit 10
  8 - 48000000 - call
  9 - 70000000 - halt
  10 - 04000001 - lit 1
  11 - 0C000000 - load
  12 - 04000000 - lit 0
  13 - 20000000 - sub
  14 - 04000025 - lit 37
  15 - 58000000 - swap
  16 - 4C000000 - jz
  17 - 04000000 - lit 0
  18 - 0C000000 - load
  19 - 04000000 - lit 0
  20 - 20000000 - sub
  21 - 0400001D - lit 29
  22 - 58000000 - swap
  23 - 4C000000 - jz
  24 - 04000000 - lit 0
  25 - 0C000000 - load
  26 - 14000001 - out 1
  27 - 04000021 - lit 33
  28 - 44000000 - jump
  29 - 04000027 - lit 39
  30 - 2C000000 - inc
  31 - 2C000000 - inc
  32 - 44000000 - jump
  33 - 74000000 - nop
  34 - 04000000 - lit 0
  35 - 04000001 - lit 1
  36 - 08000000 - store
  37 - 74000000 - nop
  38 - 74000000 - nop
  39 - 0400000A - lit 10
  40 - 44000000 - jump
  41 - 54000000 - ret
  42 - 10000000 - in 0
  43 - 04000000 - lit 0
  44 - 08000000 - store
  45 - 04000001 - lit 1
  46 - 04000001 - lit 1
  47 - 08000000 - store
  48 - 64000000 - iret

out_data_hex: |
  0 - 00000000
  1 - 00000000


out_log: |-
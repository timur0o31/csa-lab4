in_source: |
  var len
  var i
  var j
  var ind
  var buffer
  var data_ready
  array myarr 10
  : sort
      len @
      begin
          dup i @ != if
              len @ dec
              begin
                  dup j @ != if
                      myarr j @ + @
                      myarr j @ + 1 + @
                      > if
                          myarr j @ + @
                          myarr j @ + 1 + @
                          swap
                          myarr j @ + 1 + !
                          myarr j @ + !
                      then
                      j @ inc j !
                  else
                      drop
                      0 j !
                      exit
                  then
              again
              i @ inc i !
          else
              drop
              exit
          then
      again
  ;
  : length
      0
      begin
          dup myarr + @
          0 != if
          inc
          else
              len !
              exit
          then
      again
  ;
  : print
      0
      begin
          dup len @ != if
          dup myarr + @
          48 +
          out 1
          32 out 1
          inc
          else
              exit
          then
      again
  ;
  : read
      begin
          data_ready @
          0 != if
              buffer @
              dup
              0 != if
                  48 swap -
                  myarr ind @ + !
                  ind @ inc ind !
                  0 data_ready !
              else
                  exit
              then
          then
      again
  ;
  : interrupt_handler
      in 0
      buffer !
      1 data_ready !
  ;
  eint
  read
  myarr
  length
  sort
  print
  halt

in_stdin: |
  100 0 9
  200 0 4
  300 0 8
  400 0 9
  500 0 1
  600 0 \0
out_instructions: !!binary |
  AAAAymgAAAAEAACfSAAAAAQAAAYEAABsSAAAAAQAAAtIAAAABAAAg0gAAABwAAAABAAAAAwAAABcAAAABAAAAQwAAAAgAAAABAAAY1gAAABMAAAABAAAAAwAAAAwAAAAXAAAAAQAAAIMAAAAIAAAAAQAAFFYAAAATAAAA
  AQAAAYEAAACDAAAABgAAAAMAAAABAAABgQAAAIMAAAAGAAAAAQAAAEYAAAADAAAAFgAAAAgAAAABAAASFgAAABQAAAABAAABgQAAAIMAAAAGAAAAAwAAAAEAAAGBAAAAgwAAAAYAAAABAAAARgAAAAMAAAAWAAAAAQAAA
  YEAAACDAAAABgAAAAEAAABGAAAAAgAAAAEAAAGBAAAAgwAAAAYAAAACAAAAHQAAAB0AAAABAAAAgwAAAAsAAAABAAAAggAAAAEAABZRAAAAGAAAAAEAAAABAAAAggAAAAEAABaLAAAACwAAABEAAAAdAAAAAQAABdEAAA
  ABAAAAQwAAAAsAAAABAAAAQgAAAAEAABoRAAAAGAAAAAEAABpLAAAACwAAABEAAAAdAAAAAQAAA1EAAAAVAAAAAQAAABcAAAABAAABhgAAAAMAAAABAAAACAAAAAEAAB5WAAAAEwAAAAsAAAABAAAf0QAAAAEAAAACAAA
  AAQAAIAsAAAALAAAAEQAAAB0AAAABAAAbUQAAABUAAAABAAAAFwAAAAEAAAADAAAACAAAAAEAACXWAAAAEwAAABcAAAABAAABhgAAAAMAAAABAAAMBgAAAAUAAABBAAAIBQAAAEsAAAABAAAm0QAAAAEAACcLAAAACwAA
  ABEAAAAdAAAAAQAAIREAAAAVAAAAAQAAAUMAAAABAAAACAAAAAEAADFWAAAAEwAAAAEAAAEDAAAAFwAAAAEAAAAIAAAAAQAAMBYAAAATAAAAAQAADBYAAAAIAAAAAQAAAYEAAADDAAAABgAAAAIAAAABAAAAwwAAAAsAAAABAAAAwgAAAAEAAAABAAABQgAAAAEAADERAAAAAQAAMcsAAAALAAAAEQAAAB0AAAAdAAAAHQAAAAEAACfRAAAAFQAAAAQAAAABAAABAgAAAAEAAABBAAABQgAAABkAAAA
out_data: !!binary |
  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
out_stdout: |
  source LoC: 93 code instr: 207
  ============================================================
  output_buffer:1 4 8 9 9 
  ticks: 2382

out_instructions_hex: |
  0 - 68000000 - eint
  1 - 0400009F - lit 159
  2 - 48000000 - call
  3 - 04000006 - lit 6
  4 - 0400006C - lit 108
  5 - 48000000 - call
  6 - 0400000B - lit 11
  7 - 48000000 - call
  8 - 04000083 - lit 131
  9 - 48000000 - call
  10 - 70000000 - halt
  11 - 04000000 - lit 0
  12 - 0C000000 - load
  13 - 5C000000 - dup
  14 - 04000001 - lit 1
  15 - 0C000000 - load
  16 - 20000000 - sub
  17 - 04000063 - lit 99
  18 - 58000000 - swap
  19 - 4C000000 - jz
  20 - 04000000 - lit 0
  21 - 0C000000 - load
  22 - 30000000 - dec
  23 - 5C000000 - dup
  24 - 04000002 - lit 2
  25 - 0C000000 - load
  26 - 20000000 - sub
  27 - 04000051 - lit 81
  28 - 58000000 - swap
  29 - 4C000000 - jz
  30 - 04000006 - lit 6
  31 - 04000002 - lit 2
  32 - 0C000000 - load
  33 - 18000000 - add
  34 - 0C000000 - load
  35 - 04000006 - lit 6
  36 - 04000002 - lit 2
  37 - 0C000000 - load
  38 - 18000000 - add
  39 - 04000001 - lit 1
  40 - 18000000 - add
  41 - 0C000000 - load
  42 - 58000000 - swap
  43 - 20000000 - sub
  44 - 04000048 - lit 72
  45 - 58000000 - swap
  46 - 50000000 - jn
  47 - 04000006 - lit 6
  48 - 04000002 - lit 2
  49 - 0C000000 - load
  50 - 18000000 - add
  51 - 0C000000 - load
  52 - 04000006 - lit 6
  53 - 04000002 - lit 2
  54 - 0C000000 - load
  55 - 18000000 - add
  56 - 04000001 - lit 1
  57 - 18000000 - add
  58 - 0C000000 - load
  59 - 58000000 - swap
  60 - 04000006 - lit 6
  61 - 04000002 - lit 2
  62 - 0C000000 - load
  63 - 18000000 - add
  64 - 04000001 - lit 1
  65 - 18000000 - add
  66 - 08000000 - store
  67 - 04000006 - lit 6
  68 - 04000002 - lit 2
  69 - 0C000000 - load
  70 - 18000000 - add
  71 - 08000000 - store
  72 - 74000000 - nop
  73 - 74000000 - nop
  74 - 04000002 - lit 2
  75 - 0C000000 - load
  76 - 2C000000 - inc
  77 - 04000002 - lit 2
  78 - 08000000 - store
  79 - 04000059 - lit 89
  80 - 44000000 - jump
  81 - 60000000 - drop
  82 - 04000000 - lit 0
  83 - 04000002 - lit 2
  84 - 08000000 - store
  85 - 0400005A - lit 90
  86 - 2C000000 - inc
  87 - 2C000000 - inc
  88 - 44000000 - jump
  89 - 74000000 - nop
  90 - 04000017 - lit 23
  91 - 44000000 - jump
  92 - 04000001 - lit 1
  93 - 0C000000 - load
  94 - 2C000000 - inc
  95 - 04000001 - lit 1
  96 - 08000000 - store
  97 - 04000068 - lit 104
  98 - 44000000 - jump
  99 - 60000000 - drop
  100 - 04000069 - lit 105
  101 - 2C000000 - inc
  102 - 2C000000 - inc
  103 - 44000000 - jump
  104 - 74000000 - nop
  105 - 0400000D - lit 13
  106 - 44000000 - jump
  107 - 54000000 - ret
  108 - 04000000 - lit 0
  109 - 5C000000 - dup
  110 - 04000006 - lit 6
  111 - 18000000 - add
  112 - 0C000000 - load
  113 - 04000000 - lit 0
  114 - 20000000 - sub
  115 - 04000079 - lit 121
  116 - 58000000 - swap
  117 - 4C000000 - jz
  118 - 2C000000 - inc
  119 - 0400007F - lit 127
  120 - 44000000 - jump
  121 - 04000000 - lit 0
  122 - 08000000 - store
  123 - 04000080 - lit 128
  124 - 2C000000 - inc
  125 - 2C000000 - inc
  126 - 44000000 - jump
  127 - 74000000 - nop
  128 - 0400006D - lit 109
  129 - 44000000 - jump
  130 - 54000000 - ret
  131 - 04000000 - lit 0
  132 - 5C000000 - dup
  133 - 04000000 - lit 0
  134 - 0C000000 - load
  135 - 20000000 - sub
  136 - 04000097 - lit 151
  137 - 58000000 - swap
  138 - 4C000000 - jz
  139 - 5C000000 - dup
  140 - 04000006 - lit 6
  141 - 18000000 - add
  142 - 0C000000 - load
  143 - 04000030 - lit 48
  144 - 18000000 - add
  145 - 14000001 - out 1
  146 - 04000020 - lit 32
  147 - 14000001 - out 1
  148 - 2C000000 - inc
  149 - 0400009B - lit 155
  150 - 44000000 - jump
  151 - 0400009C - lit 156
  152 - 2C000000 - inc
  153 - 2C000000 - inc
  154 - 44000000 - jump
  155 - 74000000 - nop
  156 - 04000084 - lit 132
  157 - 44000000 - jump
  158 - 54000000 - ret
  159 - 04000005 - lit 5
  160 - 0C000000 - load
  161 - 04000000 - lit 0
  162 - 20000000 - sub
  163 - 040000C5 - lit 197
  164 - 58000000 - swap
  165 - 4C000000 - jz
  166 - 04000004 - lit 4
  167 - 0C000000 - load
  168 - 5C000000 - dup
  169 - 04000000 - lit 0
  170 - 20000000 - sub
  171 - 040000C0 - lit 192
  172 - 58000000 - swap
  173 - 4C000000 - jz
  174 - 04000030 - lit 48
  175 - 58000000 - swap
  176 - 20000000 - sub
  177 - 04000006 - lit 6
  178 - 04000003 - lit 3
  179 - 0C000000 - load
  180 - 18000000 - add
  181 - 08000000 - store
  182 - 04000003 - lit 3
  183 - 0C000000 - load
  184 - 2C000000 - inc
  185 - 04000003 - lit 3
  186 - 08000000 - store
  187 - 04000000 - lit 0
  188 - 04000005 - lit 5
  189 - 08000000 - store
  190 - 040000C4 - lit 196
  191 - 44000000 - jump
  192 - 040000C7 - lit 199
  193 - 2C000000 - inc
  194 - 2C000000 - inc
  195 - 44000000 - jump
  196 - 74000000 - nop
  197 - 74000000 - nop
  198 - 74000000 - nop
  199 - 0400009F - lit 159
  200 - 44000000 - jump
  201 - 54000000 - ret
  202 - 10000000 - in 0
  203 - 04000004 - lit 4
  204 - 08000000 - store
  205 - 04000001 - lit 1
  206 - 04000005 - lit 5
  207 - 08000000 - store
  208 - 64000000 - iret
out_data_hex: |
  0 - 00000000
  1 - 00000000
  2 - 00000000
  3 - 00000000
  4 - 00000000
  5 - 00000000
  6 - 00000000
  7 - 00000000
  8 - 00000000
  9 - 00000000
  10 - 00000000
  11 - 00000000
  12 - 00000000
  13 - 00000000
  14 - 00000000
  15 - 00000000
